name: Vehicle
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/driver/vehicles
    metadata:
      groupName: Vehicle
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List paginated vehicles for the authenticated driver.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              { "id": 1, "make": "Toyota", "model": "Vitz", "plate_number": "XYZ123" }
            ],
            "meta": {
              "current_page": 1,
              "last_page": 2,
              "total": 15
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/driver/vehicles
    metadata:
      groupName: Vehicle
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new vehicle for the authenticated driver.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      make:
        name: make
        description: "The vehicle's make."
        required: true
        example: '"Toyota"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      model:
        name: model
        description: "The vehicle's model."
        required: true
        example: '"Vitz"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      plate_number:
        name: plate_number
        description: 'The license plate number.'
        required: true
        example: '"XYZ123"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      make: '"Toyota"'
      model: '"Vitz"'
      plate_number: '"XYZ123"'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Vehicle created",
            "vehicle": { "id": 1, "make": "Toyota", "model": "Vitz", "plate_number": "XYZ123" }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/driver/vehicles/{vehicle_id}'
    metadata:
      groupName: Vehicle
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Show a specific vehicle's details."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      vehicle_id:
        name: vehicle_id
        description: 'The ID of the vehicle.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      vehicle:
        name: vehicle
        description: 'The ID of the vehicle.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      vehicle_id: 1
      vehicle: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": { "id": 1, "make": "Toyota", "model": "Vitz", "plate_number": "XYZ123" }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/driver/vehicles/{vehicle}'
    metadata:
      groupName: Vehicle
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a specific vehicle.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      vehicle:
        name: vehicle
        description: 'The vehicle.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the vehicle.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      vehicle: 1
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      make:
        name: make
        description: "The vehicle's make."
        required: false
        example: '"Nissan"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      model:
        name: model
        description: "The vehicle's model."
        required: false
        example: '"Sunny"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      plate_number:
        name: plate_number
        description: 'The license plate number.'
        required: false
        example: '"XYZ999"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      make: '"Nissan"'
      model: '"Sunny"'
      plate_number: '"XYZ999"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Vehicle updated",
            "vehicle": { "id": 1, "make": "Nissan", "model": "Sunny", "plate_number": "XYZ999" }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/driver/vehicles/{vehicle}'
    metadata:
      groupName: Vehicle
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a vehicle and deactivate driver if no vehicles remain.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      vehicle:
        name: vehicle
        description: 'The vehicle.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the vehicle.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      vehicle: 1
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Vehicle deleted and driver deactivated"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
