name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/auth/me
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get current authenticated user.'
      description: 'Returns user details based on token.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Michael Mwanza",
            "email": "michael@example.com"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/ratings
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new rating.'
      description: 'Submit a review for a completed ride. Authentication is required via a Bearer token.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer {your_token_here}"'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ride_id:
        name: ride_id
        description: 'The ID of the ride being rated.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      reviewee_id:
        name: reviewee_id
        description: 'The ID of the user being reviewed.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      stars:
        name: stars
        description: 'The star rating (1â€“5).'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      ride_id: 7
      reviewee_id: 3
      stars: 5
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 25,
            "ride_id": 7,
            "reviewer_id": 1,
            "reviewee_id": 3,
            "stars": 5,
            "created_at": "2025-07-26T00:35:23.000000Z",
            "updated_at": "2025-07-26T00:35:23.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/my-ratings
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all ratings given by the authenticated user.'
      description: |-
        Returns a list of all ratings submitted by the current user.
        Requires a Bearer token for authentication.
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-access-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 25,
              "ride_id": 7,
              "reviewee_id": 3,
              "stars": 5,
              "created_at": "2025-07-26T00:35:23.000000Z",
              "updated_at": "2025-07-26T00:35:23.000000Z"
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/my-average-rating
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the average rating received by the authenticated user.'
      description: |-
        Returns the average star rating this user has received from others.
        Requires a Bearer token for authentication.
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-access-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "average_rating": 4.7
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/test-pusher
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: Dispatched!
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
