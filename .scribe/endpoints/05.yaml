name: Rider
description: |-
  APIs for riders to simulate and create payments for rides.

  These endpoints require Sanctum authentication and are only accessible to riders.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/rider
    metadata:
      groupName: Rider
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "List the authenticated user's rider profile."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": {"user_id": 1, "home_address": "123 Main St"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/rider
    metadata:
      groupName: Rider
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Create or update the authenticated user's rider profile."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      home_address:
        name: home_address
        description: "The rider's home address."
        required: true
        example: '456 Elm St'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      home_address: '456 Elm St'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": {"user_id": 1, "home_address": "456 Elm St"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/rider
    metadata:
      groupName: Rider
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Delete the authenticated user's rider profile."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Rider profile deleted"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/rider/payments
    metadata:
      groupName: Rider
      groupDescription: |-
        APIs for riders to simulate and create payments for rides.

        These endpoints require Sanctum authentication and are only accessible to riders.
      subgroup: ''
      subgroupDescription: ''
      title: 'Simulate and store a ride payment.'
      description: 'Sends a mock payment using the FakePaymentProvider and records it in the database.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ride_id:
        name: ride_id
        description: 'The ID of the ride being paid for.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      amount:
        name: amount
        description: 'The amount to pay. Must be greater than 0.'
        required: true
        example: 15.5
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      method:
        name: method
        description: 'optional The payment method used. Default is "fake_card".'
        required: false
        example: wallet
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      ride_id: 12
      amount: 15.5
      method: wallet
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "message": "Payment processed via Mock Provider",
           "payment": {
               "id": 35,
               "ride_id": 12,
               "amount": "15.50",
               "method": "wallet",
               "created_at": "2025-07-26T01:58:12.000000Z"
           },
           "reference": "MOCK-LJ7B9QX1",
           "timestamp": "2025-07-26T01:58:12.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
