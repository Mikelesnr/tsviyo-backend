name: Ride
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/rides
    metadata:
      groupName: Ride
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List rides requested by the authenticated rider.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"pickup_lat":-17.8252,"pickup_lng":31.0335,"dropoff_lat":-17.8291,"dropoff_lng":31.0405}]'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/rides
    metadata:
      groupName: Ride
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Request a new ride.'
      description: |-
        After a successful request, the backend emits a `RideRequested` socket event
        to the `rides.nearby` channel. Frontend drivers subscribed to this channel
        can receive the ride details in real time.
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pickup_lat:
        name: pickup_lat
        description: 'Latitude of pickup point.'
        required: true
        example: -17.8252
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      pickup_lng:
        name: pickup_lng
        description: 'Longitude of pickup point.'
        required: true
        example: 31.0335
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      dropoff_lat:
        name: dropoff_lat
        description: 'Latitude of dropoff point.'
        required: true
        example: -17.8291
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      dropoff_lng:
        name: dropoff_lng
        description: 'Longitude of dropoff point.'
        required: true
        example: 31.0405
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      pickup_lat: -17.8252
      pickup_lng: 31.0335
      dropoff_lat: -17.8291
      dropoff_lng: 31.0405
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "data": {
              "id": 1,
              "status": "requested"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/rides/{ride_id}/cancel'
    metadata:
      groupName: Ride
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Cancel a ride before it's accepted by a driver."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ride_id:
        name: ride_id
        description: 'The ID of the ride.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ride_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"status":"canceled"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message":"Unauthorized or invalid cancellation stage"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/rides/{ride_id}/late-cancel'
    metadata:
      groupName: Ride
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Cancel a ride after it has been accepted â€” with reason.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ride_id:
        name: ride_id
        description: 'The ID of the ride.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ride_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      reason:
        name: reason
        description: 'Explanation for late cancellation.'
        required: true
        example: '"Emergency came up"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      reason: '"Emergency came up"'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"Ride cancelled after acceptance","data":{"id":1,"status":"canceled"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message":"Unauthorized or invalid cancellation stage"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
