name: Ride
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/rides
    metadata:
      groupName: Ride
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List rides requested by the authenticated rider.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"pickup_lat":-17.8252,"pickup_lng":31.0335,"dropoff_lat":-17.8291,"dropoff_lng":31.0405}]'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/rides
    metadata:
      groupName: Ride
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Request a new ride.'
      description: |-
        Creates a new ride record for the authenticated rider. The ride starts in a `requested` state
        and may include pickup/dropoff coordinates, addresses, a fare estimate, and an optional pickup time.

        After a successful request, the backend emits a `RideRequested` socket event
        to the `rides.nearby` channel. Frontend drivers subscribed to this channel
        receive the ride details in real time.
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pickup_lat:
        name: pickup_lat
        description: 'Latitude of the pickup location.'
        required: true
        example: -17.7978
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      pickup_lng:
        name: pickup_lng
        description: 'Longitude of the pickup location.'
        required: true
        example: 31.1259
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      dropoff_lat:
        name: dropoff_lat
        description: 'Latitude of the dropoff location.'
        required: true
        example: -17.8147
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      dropoff_lng:
        name: dropoff_lng
        description: 'Longitude of the dropoff location.'
        required: true
        example: 31.1447
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      pickup_address:
        name: pickup_address
        description: 'optional Human-readable pickup address.'
        required: false
        example: '"Food Lovers Market Greendale, Harare"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      dropoff_address:
        name: dropoff_address
        description: 'optional Human-readable dropoff address.'
        required: false
        example: '"Pick n Pay Kamfinsa, Harare"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      pickup_time:
        name: pickup_time
        description: 'optional Scheduled pickup time (YYYY-MM-DD HH:MM:SS).'
        required: false
        example: '"2025-07-29 08:15:00"'
        type: datetime
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      fare:
        name: fare
        description: 'optional Estimated fare in USD.'
        required: false
        example: 6.5
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      pickup_lat: -17.7978
      pickup_lng: 31.1259
      dropoff_lat: -17.8147
      dropoff_lng: 31.1447
      pickup_address: '"Food Lovers Market Greendale, Harare"'
      dropoff_address: '"Pick n Pay Kamfinsa, Harare"'
      pickup_time: '"2025-07-29 08:15:00"'
      fare: 6.5
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "data": {
              "id": 1,
              "status": "requested",
              "pickup_lat": -17.7978,
              "pickup_lng": 31.1259,
              "dropoff_lat": -17.8147,
              "dropoff_lng": 31.1447,
              "pickup_add": "Food Lovers Market Greendale, Harare",
              "dropoff_add": "Pick n Pay Kamfinsa, Harare",
              "pickup_time": "2025-07-29 08:15:00",
              "fare": 6.50
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/rides/{ride_id}/cancel'
    metadata:
      groupName: Ride
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Cancel a ride before it's accepted by a driver."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ride_id:
        name: ride_id
        description: 'The ID of the ride.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ride_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"status":"canceled"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message":"Unauthorized or invalid cancellation stage"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/rides/{ride_id}/late-cancel'
    metadata:
      groupName: Ride
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Cancel a ride after it has been accepted â€” with reason.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'string required Bearer token used to authenticate the request. Example: "Bearer your-token"'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ride_id:
        name: ride_id
        description: 'The ID of the ride.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ride_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      reason:
        name: reason
        description: 'Explanation for late cancellation.'
        required: true
        example: '"Emergency came up"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      reason: '"Emergency came up"'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"Ride cancelled after acceptance","data":{"id":1,"status":"canceled"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message":"Unauthorized or invalid cancellation stage"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
